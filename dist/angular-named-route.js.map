{"version":3,"sources":["named-route-module.js","named-route-directive.js","named-route-service.js"],"names":[],"mappings":"AAAA,QAAQ,OAAO,gBAAgB,IAAI;ACAnC,QAAQ,OAAO,gBAAgB,UAAU,oCAAc,UAAU,mBAAmB;IAChF;;IAEA,OAAO;QACH,UAAU;QACV,YAAY;QACZ,OAAO;YACH,MAAM;YACN,MAAM;;QAEV,MAAM,UAAU,QAAQ,UAAU;;YAE9B,SAAS,aAAa;gBAClB,IAAI,OAAO,SAAS,WAAW;oBAC3B,SAAS,KAAK,QAAQ,kBAAkB,QAAQ,OAAO,MAAM,OAAO;;;;YAI5E,OAAO,OAAO,QAAQ;YACtB,OAAO,OAAO,QAAQ,YAAY;;;IAG3C;ACtBH,QAAQ,OAAO,gBAAgB,QAAQ,6CAAqB,UAAU,QAAQ,WAAW;IACrF;;;IAGA,IAAI,WAAW;;IAEf,OAAO,KAAK,OAAO,QAAQ,QAAQ,UAAU,MAAM;QAC/C,IAAI,QAAQ,OAAO,OAAO;QAC1B,IAAI,MAAM,MAAM;YACZ,IAAI,SAAS,eAAe,MAAM,OAAO;gBACrC,MAAM,IAAI,MAAM,iBAAiB,MAAM,OAAO;;YAElD,SAAS,MAAM,QAAQ;gBACnB,MAAM;gBACN,OAAO;;;;;IAKnB,SAAS,QAAQ,MAAM,MAAM;QACzB,IAAI,MAAM,CAAC;;QAEX,IAAI,CAAC,SAAS,eAAe,OAAO;YAChC,MAAM,IAAI,MAAM,iBAAiB,OAAO;;;QAG5C,OAAO,SAAS,MAAM,KAAK,QAAQ,WAAW,UAAU,OAAO,GAAG;YAC9D;;YAEA,IAAI,EAAE,UAAU;;;YAGhB,IAAI,QAAQ,QAAQ,OAAO;gBACvB,OAAO,KAAK;;;;YAIhB,IAAI,QAAQ,SAAS,OAAO;gBACxB,IAAI,KAAK,eAAe,IAAI;oBACxB,OAAO,KAAK;;gBAEhB,OAAO;;;;YAIX,IAAI,CAAC,KAAK;gBACN,OAAO,SAAS,YAAY,MAAM;;;YAGtC,OAAO;;;;IAIf,OAAO;QACH,SAAS;QACT,MAAM,UAAU,MAAM,MAAM;YACxB,UAAU,KAAK,QAAQ,MAAM;;;IAGtC","file":"angular-named-route.js","sourcesContent":["angular.module('ngNamedRoute', []);","angular.module('ngNamedRoute').directive('namedRoute', function (namedRouteService) {\n    'use strict';\n\n    return {\n        restrict: 'A',\n        transclude: true,\n        scope: {\n            name: '=namedRoute',\n            args: '=routeParams'\n        },\n        link: function ($scope, $element) {\n\n            function updateHref() {\n                if ($scope.name !== undefined) {\n                    $element.attr('href', namedRouteService.reverse($scope.name, $scope.args));\n                }\n            }\n\n            $scope.$watch('name', updateHref);\n            $scope.$watch('args', updateHref, true);\n        }\n    };\n});","angular.module('ngNamedRoute').factory('namedRouteService', function ($route, $location) {\n    'use strict';\n\n    //map name to route\n    var routemap = {};\n\n    Object.keys($route.routes).forEach(function (path) {\n        var route = $route.routes[path];\n        if (route.name) {\n            if (routemap.hasOwnProperty(route.name)) {\n                throw new Error(\"Route name [\" + route.name + \"] defined more than once.\");\n            }\n            routemap[route.name] = {\n                path: path,\n                route: route\n            };\n        }\n    });\n\n    function reverse(name, args) {\n        var idx = -1;\n\n        if (!routemap.hasOwnProperty(name)) {\n            throw new Error(\"Route name [\" + name + \"] not known.\");\n        }\n\n        return routemap[name].path.replace(/(:\\w+)/g, function (match, p) {\n            idx++;\n\n            p = p.substring(1);\n\n            //arguments is an array: resolve positional parameter\n            if (angular.isArray(args)) {\n                return args[idx];\n            }\n\n            //argument is an object: resolve property\n            if (angular.isObject(args)) {\n                if (args.hasOwnProperty(p)) {\n                    return args[p];\n                }\n                return '?';\n            }\n\n            //it's string or number, return as is, unless more than one is required\n            if (!idx) {\n                return args === undefined ? '?' : args;\n            }\n\n            return '?';\n        });\n    }\n\n    return {\n        reverse: reverse,\n        open: function (name, args) {\n            $location.path(reverse(name, args));\n        }\n    };\n});"],"sourceRoot":"/source/"}