angular.module("ngNamedRoute",[]),angular.module("ngNamedRoute").directive("namedRoute",["namedRouteService",function(e){"use strict";return{restrict:"A",scope:{name:"=namedRoute",args:"=routeParams"},link:function(n,r){function t(){void 0!==n.name&&r.attr("href",e.reverse(n.name,n.args))}n.$watch("name",t),n.$watch("args",t,!0)}}}]),angular.module("ngNamedRoute").provider("namedRouteService",["$locationProvider",function(e){"use strict";this.$get=["$route","$location",function(n,r){function t(n,t){var o=-1;if(!a.hasOwnProperty(n))throw new Error("Route name ["+n+"] not known.");return(r.$$html5?"":"#"+e.hashPrefix())+a[n].path.replace(/(:\w+[\*\?]{0,1})/g,function(e,n){o++,n=n.substring(1);var r="?"===n[n.length-1]?"":"?";return("*"===n[n.length-1]||"?"===n[n.length-1])&&(n=n.substring(0,n.length-1)),angular.isArray(t)?o<t.length?t[o]:r:angular.isObject(t)?t.hasOwnProperty(n)?t[n]:r:o?"?":void 0===t?r:t})}var a={};return Object.keys(n.routes).forEach(function(e){var r=n.routes[e];if(r.name){if(a.hasOwnProperty(r.name))throw new Error("Route name ["+r.name+"] defined more than once.");a[r.name]={path:e,route:r}}}),{reverse:t,open:function(e,n){r.path(t(e,n))}}}]}]);