angular.module("ngNamedRoute",[]),angular.module("ngNamedRoute").directive("namedRoute",["$location","namedRouteService",function(e,r){"use strict";return{restrict:"A",scope:{name:"=namedRoute",args:"=routeParams",query_params:"=routeQueryParams"},link:function(n,t){function a(){void 0!==n.name&&t.attr("href",(e.$$html5?"":"#"+r.hashPrefix())+r.reverse(n.name,n.args,n.query_params))}n.$watch("name",a),n.$watch("args",a,!0),n.$watch("query_params",a,!0)}}}]),angular.module("ngNamedRoute").provider("namedRouteService",["$locationProvider",function(e){"use strict";this.$get=["$route","$location",function(r,n){function t(e,r,n){var t,o=-1;if(!a.hasOwnProperty(e))throw new Error("Route name ["+e+"] not known.");return t=a[e].path.replace(/(:\w+[\*\?]{0,1})/g,function(e,n){o++,n=n.substring(1);var t="?"===n[n.length-1]?"":"?";return("*"===n[n.length-1]||"?"===n[n.length-1])&&(n=n.substring(0,n.length-1)),angular.isArray(r)?o<r.length?r[o]:t:angular.isObject(r)?r.hasOwnProperty(n)?r[n]:t:o?"?":void 0===r?t:r}),n&&(t+="?"+Object.keys(n).map(function(e){var r=n[e];return angular.isArray(r)?r.map(function(r){return e+"="+encodeURIComponent(r)}).join("&"):e+"="+encodeURIComponent(r)}).join("&")),t}var a={};return Object.keys(r.routes).forEach(function(e){var n=r.routes[e];if(n.name){if(a.hasOwnProperty(n.name))throw new Error("Route name ["+n.name+"] defined more than once.");a[n.name]={path:e,route:n}}}),{reverse:t,open:function(e,r){n.path(t(e,r))},hashPrefix:function(){return e.hashPrefix()}}}]}]);